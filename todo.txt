#!/bin/bash
#MAYBE # Add amd_pstate=active and no watchdog to GRUB_CMDLINE_LINUX_DEFAULT

#Make the boot partition 1gb

#Install the gtk themes and icons needed (check installed packages on local installation)

#Maybe setup fonts, or just install a program that lets you do it through a gui

#setup pipewire and wireplumber

#Enable custom services

# Get a list of explicitly installed programs and sift through it to get useful programs

# Expand the list of cleanup services to include more functions, like removing unwanted clutter in the home and config directory

# Write python script to remove duplicates from playlist (tfg)

# Learn what pacreport can do to track package files and help clean them up
# Also take a look at aconfmgr if needed

# Rund xdg-ninja in vm to see which enviroment virable I should set

---### This is the first install script ###---

# Get up to date arch mirrors

reflector --latest 200 --protocol http,https --sort rate --save /etc/pacman.d/mirrorlist

# Install arch and some useful programs

pacstrap -k /mnt base linux-zen linux-firmware base-devel networkmanager vim nvim man-db man-pages texinfo grub efibootmgr amd-ucode reflector git

genfstab -U /mnt >> /mnt/etc/fstab

arch-chroot /mnt

ln -sf /usr/share/zoneifno/Europe/Zurich /etc/localtime

hwclock --systohc

sed -i '171s/^.//' /etc/locale.gen

locale-gen

echo 'LANG=en_US.UTF-8' >> /etc/locale.conf

echo 'jebus-desktop' >> /etc/hostname

systemctl start NetworkManager.service
systemctl enable NetworkManager.service

passwd stefan98

# Install grub

grub-install --target=x86_64-efi --efi-directory=/boot/ --bootloader-id=GRUB

grub-mkconfig -i /boot/grub/grub.cfg

---### END ###---

---### Second install script ###---

# Setup reflector service to have always uptodate arch mirrors

sed -i '27s/.*/--sort rate/' /etc/xdg/reflector/reflector.conf
systemctl enable reflector.timer
systemctl start reflector.timer

# Enable multi downloads in pacman and enable multilib repo
sed -i '39/s/.*/ParallelDownloads = 5/' /etc/pacman.conf
sed -i '92/s/.*/[multilib]/' /etc/pacman.conf
sed -i '93/s/.*/Include = /etc/pacman.d/mirrorlist/' /etc/pacman.conf

# Add user and add it to some useful groups

useradd -m -G wheel,plugdev,gamemode,video,audio jebus

# Install everything needed

pacman -S sudo ufw xorg-server xorg-apps nvidia nvidia-utils lib32-nvidia-utils nvidia-settings nvidia-dkms awesome xdg-user-dirs gamemode lib32-gamemode cpupower pipewire lib32-pipewire wireplumber qpwgraph pipewire-audio pipewire-alsa pipewire-pulse noise-suppression-for-voice dnscrypt-proxy chrony mlocate noto-fonts noto-fonts-cjk noto-fonts-emoji ttf-fira-code wqy-zenhei bash-completition colorgcc steam wine-staging wine-gecko wine-mono lutris profile-sync-daemon profile-cleaner xdg-desktop-portal xdg-desktop-portal-gtk

# Start ufw with a basic config

systemctl enable ufw.service
systemctl start ufw.service
ufw default deny
ufw allow from 192.168.0.0/24
ufw allow Deluge
ufw limit ssh
ufw enable

# Add wheel group to no passwd sudo

sed -i '88s/^.//' /etc/sudoers

# Add timer to ssh login failed attemps, deny root login and enable key only login

echo 'auth optional pam_faildelay.so delay=4000000' >> /etc/pam.d/system-login
echo 'PermitRootLogin no' >> /etc/ssh/sshd_config.d/20-deny_root.conf
echo 'kernel.kexec_load_disabled = 1' >> /etc/sysctl.d/51-kexec-restrict.conf

#I don't know what this is
#sed -i '39s/^.//' /etc/sudoers

# Mouse settings using libinput

echo -e 'Section "InputClass"\n    Identifier "My Mouse"\n    Driver "libinput"\n    MatchIsPointer "yes"\n    Option "AccelProfile" "flat"\n    Option "AccelSpeed" "-0.75"\nEndSection' >> /etc/X11/xorg.conf.d/50-mouse-acceleration.conf

# Load nvidia kernel modules using initframs

sed -i '7s/.*/MODULES=(nvidia nvidia_modeset nvidia_uvm nvidia_drm)/' /etc/mkinitcpio.conf

# Set invidia kernel modules settings

echo -e 'options nvidia-drm modeset=1\noptions nvidia NVreg_UsePageAttributeTable=1\noptions nvidia NVreg_EnablePCIeGen3=1\noptions nvidia NVreg_NvAGP=3\noptions nvidia NVreg_EnableAGPFW=1' >> /etc/modprobe.d/nvidia.conf

# Pacman hook to update initframs after each nvidia update

echo -e "[Trigger]\nOperation=Install\nOperation=Upgrade\nOperation=Remove\nType=Package\nTarget=nvidia\nTarget=linux-zen\n# Change the linux part above and in the Exec line if a different kernel is used\n\n[Action]\nDescription=Update NVIDIA module in initcpio/nDepends=mkinitcpio\nWhen=PostTransaction\nNeedsTargets\nExec=/bin/sh -c \'while read -r trg; do case \$trg in linux) exit 0; esac; done; /usr/bin/mkinitcpio -P\'" > /etc/pacman.d/hooks/nvidia.hook

xdg-user-dirs-update

# Dnscrypt setup
sed -i '79s/.*/require_dnssec = true/' /etc/dnscrypt-proxy/dnscrypt-proxy.toml
sed -i '82s/.*/require_nolog = true/' /etc/dnscrypt-proxy/dnscrypt-proxy.toml
sed -i '85s/.*/require_nofilter = true/' /etc/dnscrypt-proxy/dnscrypt-proxy.toml
sed -i '42s/.*/listen_addresses = ['\''127.0.0.1:53'\'', '\''[::1]:53'\'']/' /etc/dnscrypt-proxy/dnscrypt-proxy.toml
echo '' > /etc/resolv.conf
echo -e 'nameserver ::1\nnameserver 127.0.0.1\noptions edns0' > /etc/resolv.conf
systemctl enable dnscrypt-proxy.service
systemctl start dnscrypt-proxy.service

# Chrony setup

sed -i '30s/.*/server 0.europe.pool.ntp.org/' /etc/chrony.conf
sed -i '31s/.*/server 1.europe.pool.ntp.org/' /etc/chrony.conf
sed -i '32s/.*/server 2.europe.pool.ntp.org/' /etc/chrony.conf
sed -i '33s/.*/server 3.europe.pool.ntp.org/' /etc/chrony.conf
mkdir /etc/sysconfig/
echo "OPTIONS='-r -s'" > /etc/sysconfig/chronyd
echo -e 'dumponexit\ndumpdir /var/lib/chrony\nrtcfile /var/lib/chrony/rtc' >> /etc/chrony.conf
systemctl enable chronyd.service
systemctl start chronyd.service
chronyc online

# Disable core dumps

echo 'kernel.core_pattern=/dev/null' > /etc/sysctl.d/50-coredump.conf

# Improve network performance (?)
echo 'net.ipv4.tcp_fastopen = 3' >> /etc/sysctl.d/99-sysctl.conf
echo -e 'net.core.default_qdisc = cake\nnet.ipv4.tcp_congestion_control = bbr' >> /etc/sysctl.d/99-sysctl.conf

# Disable watchdog and change grub wallpaper

sed -i '6s/.*/GRUB_CMDLINE_LINUX_DEFAULT="loglevel=3 quiet nowatchdog tsc=reliable clocksource=tsc"/' /etc/default/grub
sed -i '46s/.*/GRUB_BACKGROUND="/home/jebus/Pictures/Wallpapers/Pokemon_may_waterfall/1d920581-c76c-40f3-b340-9fa34e013c7c_maywaterfalldesktophd.png"/' /etc/default/grub
grub-mkconfig -o /boot/grub/grub.cfg

systemctl enable fstrim.timer

# Kernel tweaks from arch/gaming

echo '#    Path                  Mode UID  GID  Age Argument' > /etc/tmpfiles.d/consistent-response-time-for-gaming.conf
echo 'w /proc/sys/vm/compaction_proactiveness - - - - 0' > /etc/tmpfiles.d/consistent-response-time-for-gaming.conf
echo 'w /proc/sys/vm/min_free_kbytes - - - - 838860' > /etc/tmpfiles.d/consistent-response-time-for-gaming.conf
echo 'w /proc/sys/vm/swappiness - - - - 10' > /etc/tmpfiles.d/consistent-response-time-for-gaming.conf
echo 'w /sys/kernel/mm/lru_gen/enabled - - - - 5' > /etc/tmpfiles.d/consistent-response-time-for-gaming.conf
echo 'w /proc/sys/vm/zone_reclaim_mode - - - - 0' > /etc/tmpfiles.d/consistent-response-time-for-gaming.conf
echo 'w /proc/sys/vm/page_lock_unfairness - - - - 1' > /etc/tmpfiles.d/consistent-response-time-for-gaming.conf

# Run third part of the script as jebus to make things easier

chown /home/jebus/arch-install-script/part3.sh
su -c "bash /home/jebus/arch-install-script/part3.sh" -s bash jebus

# Install Paru

cd /home/jebus/ || exit
git clone https://aur.archlinux.org/paru.git
cd paru || exit
makepkg -si

# Install windows fonts for wine

paru -S ttf-office-2007-fonts ttf-win7-fonts ttf-ms-win8 ttf-ms-win10 ttf-ms-win11

# Install ananicy, it should at worst be ineffective

paru -S ananicy-cpp-git

sudo systemctl enable --now ananicy-cpp.service

# Configure profilesync daemon and run it

psd
sed -i '15s/.*/USE_OVERLAYFS="yes"/' ~/.config/psd/psd.conf
sed -i '56s/.*/BROWSERS=(chromium)/' ~/.config/psd/psd.conf
systemctl --user --now enable psd.service

## Increase size of the runtime dir (is stored in memory), this is safe because it will only use what is stored in it instead of preallocating memory space

sudo sed -i '44s/.*/RuntimeDirectorySize=30%/' /etc/systemd/logind.conf

# Set xdg-desktop-portal-gtk as fallback

echo -e '[preferred]\ndefault=gtk' > .config/xdg-desktop-portal/portals.conf

# Set up git bare directory and syncronize with git repo

cd /home/jebus || exit
mkdir .dotfiles
cd .dotfiles || exit
git init --bare
echo -e '[remote "master"]
    url = git@github.com:Jebusthebus/dotfiles.git
    fetch = +refs/heads/*:refs/remotes/master/*
[pull]
    rebase = true
[branch "master"]
	remote = master
	merge = refs/heads/master' >> .dotfiles/config
/usr/bin/git --git-dir="$HOME"/.dotfiles/ --work-tree="$HOME" pull

# Setup pipewire and wireplumber

systemctl --user enable --now pipewire.service
systemctl --user enable --now pipewire-pulse.service
systemctl --user enable --now wireplumber.service

# Setup bash git prompt

git clone https://github.com/magicmonty/bash-git-prompt.git ~/.bash-git-prompt --depth=1


